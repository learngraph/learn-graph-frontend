name: Release
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Unittests"]
    branches: [main]
    types:
      - completed
  release:
    types: [published]

jobs:
  build-and-push-images:
    if: ${{ github.event_name == 'release' || github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            nginx_image: "nginx:1.12-alpine"
            image_tag: "amd64"
          - platform: linux/arm64
            nginx_image: "arm64v8/nginx:stable-alpine"
            image_tag: "arm64"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/learn-graph-frontend-${{ matrix.image_tag }}
          # always push :latest tag
          flavor: |
            latest=true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          build-args: NGINX_IMAGE=${{ matrix.nginx_image }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
  upload-docker-image-manifest:
    needs:
      - build-and-push-images
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/learn-graph-frontend
          # always push :latest tag
          flavor: |
            latest=true
      - uses: int128/docker-manifest-create-action@v2
        id: build
        with:
          push: true
          index-annotations: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          # manually get the image version from the 'meta' step to register a manifest for a multi-architecture image
          sources: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/learn-graph-frontend-amd64:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/learn-graph-frontend-arm64:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
